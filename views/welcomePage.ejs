<!DOCTYPE html>

<html lang="en">

<head>
    <title>Geocast</title>

    <style>
        body {
            font: 16px;
            text-align: center;
            background: lightblue;
        }

        .mainBox {
            width: 20rem;
            height: 10rem;
            margin: auto;
        }

        div {
            width: 50rem;
            margin: auto;
        }

        #tableContainer {
            margin-top: 20px; 
        }

        table {
            margin: auto;
        }
    </style>
</head>

<body>
    <br> <br> <br>
    <h1>WELCOME TO GEOCAST <%= firstName.toUpperCase() %></h1>
    <br>
    <p><strong>Address:</strong></p>
    <input type="text" id="address" name="address">
    <button id="submit" type="submit">Submit</button>
    <br>
    <br>
    <div id="replaceHTML"></div>
    <br>
    <div id="tableContainer"></div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const doc = document.getElementById("submit");
            doc.addEventListener('click', async function () {
                const address = document.getElementById("address").value;
                fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(address)}&key=AIzaSyDgxQklS95pLeqvssvg7Z7djcxiDHsQm8w`)
                    .then(response => {
                        if (!response.ok) {
                            throw new Error(`HTTP error! Status: ${response.status}`);
                        }
                        return response.json();
                    })
                    .then(data => {
                        const { lat, lng } = data.results[0].geometry.location;

                        // Fetch weather information
                        fetchWeather(lat, lng, address);
                    })
                    .catch(error => {
                        console.error('Fetch error:', error);
                    });
            });

            function fetchWeather(latitude, longitude, location) {
                fetch(`https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&current=temperature_2m,precipitation_probability,wind_speed_10m&daily=temperature_2m_max,temperature_2m_min&timezone=auto`)
                    .then(response => {
                        if (!response.ok) {
                            throw new Error(`HTTP error! Status: ${response.status}`);
                        }
                        return response.json();
                    })
                    .then(weatherData => {
                        // Display current weather information
                        const currentTemp = weatherData.current.temperature_2m;
                        const rainChance = weatherData.current.precipitation_probability;
                        const windSpeed = weatherData.current.wind_speed_10m;

                        const maxTemp = weatherData.daily.temperature_2m_max[0];
                        const minTemp = weatherData.daily.temperature_2m_min[0];

                        const weatherInfo = `<h2>Weather forecast for ${location}:</h2>
                            <h3>Current Temperature: ${currentTemp}°C</h3>
                            <h3>Rain Chance: ${rainChance}%</h3>
                            <h3>Wind Speed: ${windSpeed} km/h</h3>
                            <h3>Max Temperature: ${maxTemp}°C</h3>
                            <h3>Min Temperature: ${minTemp}°C</h3>`;

                        document.getElementById("replaceHTML").innerHTML = weatherInfo;

                        // Add location to the table
                        addToTable(location, latitude, longitude, minTemp, maxTemp);
                    })
                    .catch(error => {
                        console.error('Weather Fetch error:', error);
                    });
            }

            function addToTable(location, lat, lng, minTemp, maxTemp) {
                const tableContainer = document.getElementById("tableContainer");
                const table = tableContainer.querySelector('table');
                const newRow = table.insertRow(table.rows.length);
                newRow.innerHTML = `<td>${location}</td><td>${lat}</td><td>${lng}</td><td>Max: ${maxTemp}°C, Min: ${minTemp}°C</td>`;
            }

            function generateTable() {
                let tableHTML = '<table border="1"> <tr> <th> Location </th> <th> Latitude </th> <th> Longitude </th> <th> Temperature </th> </tr></table>';
                document.getElementById("tableContainer").innerHTML = tableHTML;
            }

            generateTable();
        });

    </script>

</body>

</html>
